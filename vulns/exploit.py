import asyncio
import sys
from mcp import ClientSession
from mcp.client.sse import sse_client


async def exploit_mcp_server(server_url: str):
    print(f"[*] Connecting to MCP server at {server_url}")

    streams_context = sse_client(url=server_url)
    streams = await streams_context.__aenter__()
    session_context = ClientSession(*streams)
    session = await session_context.__aenter__()
    await session.initialize()

    print("[*] Listing available tools...")
    response = await session.list_tools()
    tools = response.tools
    print(f"[+] Found {len(tools)} tools: {[tool.name for tool in tools]}")

    tool = tools[0]  # Select the first tool for testing
    print(f"[*] Testing tool: {tool.name}")

    payload = {"title": "test", "severity": "high"}

    try:
        result = await session.call_tool(tool.name, payload)
        print(f"[*] Tool response: {result}")
    except Exception as e:
        print(f"[-] Error testing {tool.name}: {str(e)}")

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: python exploit.py <MCP_SERVER_URL>")
        sys.exit(1)

    asyncio.run(exploit_mcp_server(sys.argv[1]))
